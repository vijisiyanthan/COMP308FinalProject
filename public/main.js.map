{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/models/clinic.ts","webpack:///./src/app/models/daily-info.ts","webpack:///./src/app/models/tips.ts","webpack:///./src/app/models/user.ts","webpack:///./src/app/models/videos.ts","webpack:///./src/app/pages/daily-info/daily-info-update/daily-info-update.component.css","webpack:///./src/app/pages/daily-info/daily-info-update/daily-info-update.component.html","webpack:///./src/app/pages/daily-info/daily-info-update/daily-info-update.component.ts","webpack:///./src/app/pages/daily-info/daily-info.component.css","webpack:///./src/app/pages/daily-info/daily-info.component.html","webpack:///./src/app/pages/daily-info/daily-info.component.ts","webpack:///./src/app/pages/home/home.component.css","webpack:///./src/app/pages/home/home.component.html","webpack:///./src/app/pages/home/home.component.ts","webpack:///./src/app/pages/login/login.component.css","webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/nurse/nurse.component.css","webpack:///./src/app/pages/nurse/nurse.component.html","webpack:///./src/app/pages/nurse/nurse.component.ts","webpack:///./src/app/pages/patient/patient-clinic-update/patient-clinic-update.component.css","webpack:///./src/app/pages/patient/patient-clinic-update/patient-clinic-update.component.html","webpack:///./src/app/pages/patient/patient-clinic-update/patient-clinic-update.component.ts","webpack:///./src/app/pages/patient/patient-details/patient-details.component.css","webpack:///./src/app/pages/patient/patient-details/patient-details.component.html","webpack:///./src/app/pages/patient/patient-details/patient-details.component.ts","webpack:///./src/app/pages/signup/signup.component.css","webpack:///./src/app/pages/signup/signup.component.html","webpack:///./src/app/pages/signup/signup.component.ts","webpack:///./src/app/pages/tips/patient-tips/patient-tips.component.css","webpack:///./src/app/pages/tips/patient-tips/patient-tips.component.html","webpack:///./src/app/pages/tips/patient-tips/patient-tips.component.ts","webpack:///./src/app/pages/tips/tips.component.css","webpack:///./src/app/pages/tips/tips.component.html","webpack:///./src/app/pages/tips/tips.component.ts","webpack:///./src/app/pages/videos/videos.component.css","webpack:///./src/app/pages/videos/videos.component.html","webpack:///./src/app/pages/videos/videos.component.ts","webpack:///./src/app/partials/footer/footer.component.css","webpack:///./src/app/partials/footer/footer.component.html","webpack:///./src/app/partials/footer/footer.component.ts","webpack:///./src/app/partials/header/header.component.css","webpack:///./src/app/partials/header/header.component.html","webpack:///./src/app/partials/header/header.component.ts","webpack:///./src/app/services/clinic.service.ts","webpack:///./src/app/services/daily-info.service.ts","webpack:///./src/app/services/tips.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { componentFactoryName } from \"@angular/compiler\";\r\nimport { HomeComponent } from \"./pages/home/home.component\";\r\nimport { NurseComponent } from \"./pages/nurse/nurse.component\";\r\nimport { LoginComponent } from \"./pages/login/login.component\";\r\nimport { SignupComponent } from \"./pages/signup/signup.component\";\r\nimport { VideosComponent } from \"./pages/videos/videos.component\";\r\nimport { TipsComponent } from \"./pages/tips/tips.component\";\r\nimport { DailyInfoComponent } from \"./pages/daily-info/daily-info.component\";\r\nimport { DailyInfoUpdateComponent } from \"./pages/daily-info/daily-info-update/daily-info-update.component\";\r\nimport { PatientTipsComponent } from \"./pages/tips/patient-tips/patient-tips.component\";\r\nimport { PatientDetailsComponent } from \"./pages/patient/patient-details/patient-details.component\";\r\nimport { PatientClinicUpdateComponent } from \"./pages/patient/patient-clinic-update/patient-clinic-update.component\";\r\n\r\nimport { AuthGuard } from \"./auth/auth.guard\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"home\", component: HomeComponent, data: { title: \"Final Project\" } },\r\n  {\r\n    path: \"nurse\",\r\n    component: NurseComponent,\r\n    data: { title: \"Nurse Account\", expectedRole: \"nurse\" },\r\n    canActivate: [AuthGuard]\r\n  },\r\n  { path: \"login\", component: LoginComponent, data: { title: \"Login\" } },\r\n  { path: \"signup\", component: SignupComponent, data: { title: \"Sign Up\" } },\r\n  {\r\n    path: \"videos\",\r\n    component: VideosComponent,\r\n    data: { title: \"Videos\", expectedRole: \"patient\" },\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"patient-tips\",\r\n    component: PatientTipsComponent,\r\n    data: { title: \"Patients\", expectedRole: \"patient\" },\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"patient-daily\",\r\n    component: DailyInfoComponent,\r\n    data: { title: \"Patients\", expectedRole: \"patient\" },\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"patient-daily-update\",\r\n    component: DailyInfoUpdateComponent,\r\n    data: { title: \"Patients\", expectedRole: \"patient\" },\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"patient-details\",\r\n    component: PatientDetailsComponent,\r\n    data: { title: \"Nurse Account\", expectedRole: \"nurse\" },\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"patient-details/:_id\",\r\n    component: PatientDetailsComponent,\r\n    data: { title: \"Nurse Account\", expectedRole: \"nurse\" },\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"patient-clinic-update/:_id\",\r\n    component: PatientClinicUpdateComponent,\r\n    data: { title: \"Nurse Account\", expectedRole: \"nurse\" },\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"nurse/tips/:_id\",\r\n    component: TipsComponent,\r\n    data: { title: \"Nurse Account\", expectedRole: \"nurse\" },\r\n    canActivate: [AuthGuard]\r\n  },\r\n\r\n  { path: \"\", redirectTo: \"/home\", pathMatch: \"full\" }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header></app-header>\\r\\n<flash-messages></flash-messages>\\r\\n<router-outlet></router-outlet>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","//Modules\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { NgxYoutubePlayerModule } from \"ngx-youtube-player\";\r\n\r\n//Components\r\nimport { AppComponent } from \"./app.component\";\r\nimport { NurseComponent } from \"./pages/nurse/nurse.component\";\r\nimport { HeaderComponent } from \"./partials/header/header.component\";\r\nimport { FooterComponent } from \"./partials/footer/footer.component\";\r\nimport { SignupComponent } from \"./pages/signup/signup.component\";\r\nimport { LoginComponent } from \"./pages/login/login.component\";\r\nimport { HomeComponent } from \"./pages/home/home.component\";\r\nimport { PatientDetailsComponent } from \"./pages/patient/patient-details/patient-details.component\";\r\nimport { PatientClinicUpdateComponent } from \"./pages/patient/patient-clinic-update/patient-clinic-update.component\";\r\n\r\n//Services\r\nimport {\r\n  FlashMessagesModule,\r\n  FlashMessagesService\r\n} from \"angular2-flash-messages\";\r\n//Authorization\r\nimport { AuthGuard } from \"./auth/auth.guard\";\r\nimport { AuthInterceptor } from \"./auth/auth.interceptor\";\r\nimport { UserService } from \"./services/user.service\";\r\nimport { VideosComponent } from \"./pages/videos/videos.component\";\r\nimport { TipsComponent } from './pages/tips/tips.component';\r\nimport { PatientTipsComponent } from './pages/tips/patient-tips/patient-tips.component';\r\nimport { DailyInfoComponent } from './pages/daily-info/daily-info.component';\r\nimport { DailyInfoUpdateComponent } from './pages/daily-info/daily-info-update/daily-info-update.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NurseComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    VideosComponent,\r\n    PatientDetailsComponent,\r\n    PatientClinicUpdateComponent,\r\n    TipsComponent,\r\n    PatientTipsComponent,\r\n    DailyInfoComponent,\r\n    DailyInfoUpdateComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    FlashMessagesModule,\r\n    NgxYoutubePlayerModule.forRoot()\r\n  ],\r\n  providers: [\r\n    FlashMessagesService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    },\r\n    AuthGuard,\r\n    UserService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  ActivatedRoute\r\n} from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { UserService } from \"src/app/services/user.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private userService: UserService, private router: Router) {}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    const expectedUser = route.data.expectedRole;\r\n    if (\r\n      !this.userService.isLoggedIn() ||\r\n      this.userService.getUserPayload().role !== expectedUser\r\n    ) {\r\n      this.router.navigateByUrl(\"/login\");\r\n      this.userService.deleteToken();\r\n      this.userService.getLoggedInStatus.emit(\"Inactive\");\r\n      this.userService.getLoggedInRole.emit(\"User\");\r\n      return false;\r\n    } else {\r\n      if (route.data.expectedRole == \"nurse\") {\r\n        this.userService.getLoggedInRole.emit(\"Nurse\");\r\n      } else if (route.data.expectedRole == \"patient\") {\r\n        this.userService.getLoggedInRole.emit(\"Patient\");\r\n      }\r\n      this.userService.getLoggedInStatus.emit(\"Active\");\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent\r\n} from \"@angular/common/http\";\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport { Router } from \"@angular/router\";\r\nimport { UserService } from \"../services/user.service\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private userService: UserService, private router: Router) {}\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    if (req.headers.get(\"noauth\")) return next.handle(req.clone());\r\n    else {\r\n      const clonedreq = req.clone({\r\n        headers: req.headers.set(\r\n          \"Authorization\",\r\n          \"Bearer \" + this.userService.getToken()\r\n        )\r\n      });\r\n      return next.handle(clonedreq).pipe(\r\n        tap(\r\n          event => {},\r\n          err => {\r\n            if (err.error.auth == false) {\r\n              this.router.navigateByUrl(\"/login\");\r\n            }\r\n          }\r\n        )\r\n      );\r\n    }\r\n  }\r\n}\r\n","export class Clinic {\r\n  _id: String;\r\n  recorded: Date;\r\n  bodyTemperature: Number;\r\n  heartRate: Number;\r\n  respiratoryRate: Number;\r\n  bloodPressure: Number;\r\n  patient: String;\r\n  nurse: String;\r\n}\r\n","export class DailyInfo {\r\n  _id: String;\r\n  bodyTemperature: String;\r\n  weight: Number;\r\n  bloodSugar: Number;\r\n  patient: String;\r\n}\r\n","export class Tips {\r\n  _id: String;\r\n  content: String;\r\n  patient: String;\r\n  nurse: String;\r\n  recorded: Date;\r\n}\r\n","export class User {\r\n  _id: String;\r\n  username: String;\r\n  firstName: String;\r\n  lastName: String;\r\n  email: String;\r\n  password: String;\r\n  role: String;\r\n}\r\n","export var videos: { title: string; id: string }[] = [\r\n  {\r\n    title: \"Never, Ever Give Up. Arthur's Inspirational Transformation!\",\r\n    id: \"qX9FSZJu448\"\r\n  },\r\n  {\r\n    title: \"Never Accept Defeat | Injury Motivation\",\r\n    id: \"KKqwPjm-54Q\"\r\n  },\r\n  {\r\n    title: \"Kobe Bryant - Why Do We Fall | Motivational\",\r\n    id: \"F_7dQovALGI\"\r\n  }\r\n];\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2RhaWx5LWluZm8vZGFpbHktaW5mby11cGRhdGUvZGFpbHktaW5mby11cGRhdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container-fluid text-dark\\\">\\r\\n  <div class=\\\"row justify-content-center align-items-center\\\">\\r\\n    <div class=\\\"col col-sm-6 col-md-6 col-lg-4 col-xl-3\\\">\\r\\n      <!-- Form container -->\\r\\n      <form #infoForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(infoForm)\\\">\\r\\n        <h2 class=\\\"display-4 font-weight-bold\\\">Your Daily Info</h2>\\r\\n        <hr>\\r\\n        <br>\\r\\n        <div class=\\\"md-form\\\">\\r\\n          <i class=\\\"fa fa-thermometer-three-quarters prefix grey-text\\\"></i>\\r\\n          <label for=\\\"materialFormRegisterNameEx\\\">Body Temperature</label>\\r\\n          <input type=\\\"String\\\" id=\\\"materialFormRegisterNameEx\\\" name=\\\"bodyTemperature\\\" class=\\\"form-control\\\"\\r\\n            #bodyTemperature=\\\"ngModel\\\" [(ngModel)]=\\\"model.bodyTemperature\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"md-form\\\">\\r\\n          <i class=\\\"fa fa-weight prefix grey-text\\\"></i>\\r\\n          <label for=\\\"materialFormRegisterNameEx\\\">Weight</label>\\r\\n          <input type=\\\"String\\\" id=\\\"materialFormRegisterNameEx\\\" name=\\\"weight\\\" class=\\\"form-control\\\" #weight=\\\"ngModel\\\"\\r\\n            [(ngModel)]=\\\"model.weight\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"md-form\\\">\\r\\n          <i class=\\\"fa fa-tint prefix grey-text\\\"></i>\\r\\n          <label for=\\\"materialFormRegisterNameEx\\\">Blood Sugar Level</label>\\r\\n          <input type=\\\"String\\\" id=\\\"materialFormRegisterNameEx\\\" name=\\\"bloodSugar\\\" class=\\\"form-control\\\"\\r\\n            #bloodSugar=\\\"ngModel\\\" [(ngModel)]=\\\"model.bloodSugar\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"text-center mt-4\\\">\\r\\n          <input type=\\\"submit\\\" class=\\\"login\\\" value=\\\"Send\\\">\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\n\r\nimport { DailyInfoService } from \"src/app/services/daily-info.service\";\r\nimport { DailyInfo } from \"src/app/models/daily-info\";\r\n\r\n@Component({\r\n  selector: \"app-daily-info-update\",\r\n  templateUrl: \"./daily-info-update.component.html\",\r\n  styleUrls: [\"./daily-info-update.component.css\"]\r\n})\r\nexport class DailyInfoUpdateComponent implements OnInit {\r\n  title: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private infoService: DailyInfoService\r\n  ) {}\r\n\r\n  model = new DailyInfo();\r\n\r\n  ngOnInit() {\r\n    this.title = this.route.snapshot.data.title;\r\n    //Get _id from params in order to get clinic data\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    if (localStorage.getItem(\"infoId\")) {\r\n      this.model = form.value;\r\n      this.model._id = localStorage.getItem(\"infoId\");\r\n      this.infoService.updateItem(this.model).subscribe(\r\n        res => {\r\n          localStorage.removeItem(\"infoId\");\r\n          this.router.navigateByUrl(\"/patient-daily\");\r\n        },\r\n        err => {}\r\n      );\r\n    } else {\r\n      this.infoService.addItem(form.value).subscribe(\r\n        res => {\r\n          this.router.navigateByUrl(\"/patient-daily\");\r\n        },\r\n        err => {}\r\n      );\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2RhaWx5LWluZm8vZGFpbHktaW5mby5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"mask rgba-black-light d-flex justify-content-center align-items-center\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row wow fadeIn\\\">\\r\\n      <div class=\\\"col-md-9 mb-4 white-text text-center text-md-left\\\">\\r\\n        <h2 class=\\\"display-4 font-weight-bold\\\">Patient's Daily Info</h2>\\r\\n        <hr class=\\\"hr-light\\\">\\r\\n\\r\\n        <a class=\\\"btn btn-primary\\\" routerLink=\\\"/patient-daily-update\\\" role=\\\"button\\\">\\r\\n          <i class=\\\"fas fa-plus-circle\\\"></i>Add record\\r\\n        </a>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-offsetr-3 col-md-12\\\">\\r\\n            <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n              <tr>\\r\\n                <th class=\\\"text-center\\\">Record Id</th>\\r\\n                <th class=\\\"text-center\\\">Record Time</th>\\r\\n                <th class=\\\"text-center\\\">Body Temperature</th>\\r\\n                <th class=\\\"text-center\\\">Weight</th>\\r\\n                <th class=\\\"text-center\\\">Blood Sugar</th>\\r\\n                <th class=\\\"text-center\\\"></th>\\r\\n                <th class=\\\"text-center\\\"></th>\\r\\n              </tr>\\r\\n              <tr *ngFor=\\\"let info of infoDetails\\\">\\r\\n                <td class=\\\"text-center\\\">{{ info._id }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ info.recorded }}</td>\\r\\n\\r\\n                <div *ngIf=\\\"(info.hasOwnProperty('bodyTemperature'));then tempContent else other_content\\\">\\r\\n                </div>\\r\\n                <ng-template #tempContent>\\r\\n                  <td class=\\\"text-center\\\">\\r\\n                    {{ info.bodyTemperature }}\\r\\n                  </td>\\r\\n                </ng-template>\\r\\n\\r\\n                <div *ngIf=\\\"((info.hasOwnProperty('weight')));then heartContent else other_content\\\">\\r\\n                </div>\\r\\n                <ng-template #heartContent>\\r\\n                  <td class=\\\"text-center\\\">\\r\\n                    {{ info.weight }}\\r\\n                  </td>\\r\\n                </ng-template>\\r\\n\\r\\n                <div *ngIf=\\\"((info.hasOwnProperty('bloodSugar')));then bloodContent else other_content\\\">\\r\\n                </div>\\r\\n                <ng-template #bloodContent>\\r\\n                  <td class=\\\"text-center\\\">\\r\\n                    {{ info.bloodSugar }}\\r\\n                  </td>\\r\\n                </ng-template>\\r\\n                <ng-template #other_content>\\r\\n                  <td class=\\\"text-center\\\">*NR</td>\\r\\n                </ng-template>\\r\\n\\r\\n                <td class=\\\"text-center\\\">\\r\\n                  <a (click)=\\\"onEdit(info._id)\\\" class=\\\"btn btn-info\\\"><i class=\\\"fas fa-pencil-alt\\\"></i> Edit</a>\\r\\n                </td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                  <a (click)=\\\"onDelete(info._id)\\\" class=\\\"btn btn-danger\\\"><i class=\\\"fas fa-pencil-alt\\\"></i> Delete</a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </table>\\r\\n            <p class=\\\"text-uppercase font-weight-bold\\\">*NR: Not Recorded Test</p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { DailyInfo } from \"../../models/daily-info\";\r\nimport { DailyInfoService } from \"src/app/services/daily-info.service\";\r\n\r\n@Component({\r\n  selector: \"app-daily-info\",\r\n  templateUrl: \"./daily-info.component.html\",\r\n  styleUrls: [\"./daily-info.component.css\"]\r\n})\r\nexport class DailyInfoComponent implements OnInit {\r\n  infoDetails: Array<DailyInfo>;\r\n  patientId: string;\r\n\r\n  //title: String;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private dailyService: DailyInfoService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    //Get _id from params in order to get clinic data\r\n    this.route.params.subscribe(params => {\r\n      this.patientId = params._id;\r\n    });\r\n    this.displayDailyInfo();\r\n  }\r\n\r\n  displayDailyInfo(): void {\r\n    this.dailyService.getList().subscribe(data => {\r\n      //console.log(data);\r\n      this.infoDetails = data;\r\n    });\r\n  }\r\n\r\n  onDelete(_id: string) {\r\n    if (confirm(\"Are you sure to delete this record ?\") == true) {\r\n      this.dailyService.deleteItem(_id).subscribe(res => {});\r\n      this.displayDailyInfo();\r\n    }\r\n  }\r\n  onEdit(infoId: string) {\r\n    localStorage.setItem(\"infoId\", infoId);\r\n    this.router.navigateByUrl(\"/patient-daily-update\");\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron\\\">\\r\\n    <h1 class=\\\"display-4\\\">Welcome to {{ title }}</h1>\\r\\n    <p class=\\\"lead\\\">Project Specifications</p>\\r\\n    <hr class=\\\"my-4\\\">\\r\\n    <p>Client needs an application to help nurse practitioners to monitor patients during the first weeks of their\\r\\n        release from hospital and also helps the patients to monitor their daily activities. Develop a responsive app that\\r\\n        implements the following functionalities:\\r\\n        1. User registers/login\\r\\n        2. If user is a nurse:\\r\\n        a. Allow the user to enter vital signs: body temperature, heart rate, blood pressure, or respiratory\\r\\n        rate.\\r\\n        b. Allow the user to access information captured during a previous clinical visit, vital signs: body\\r\\n        temperature, heart rate, blood pressure, or respiratory rate.\\r\\n        c. Allow the user to send daily motivational tips to the patient (by storing them in database and\\r\\n        providing a daily tips page for the patient to view, etc.).\\r\\n        3. If user is a patient:\\r\\n        a. Allow user to create and send an emergency alert to first responders (by emailing them, etc.)\\r\\n        b. Allow user to run video or games to motivate patients to do their physical exercises at home.\\r\\n        c. Allow user to enter daily information as specified by the doctor/nurse practitioner.\\r\\n        d. Allow user to use a checklist of common signs and symptoms, to generate a list of possible\\r\\n        medical conditions and advice on when to consult a health care provider.</p>\\r\\n    <a class=\\\"btn btn-info btn-lg\\\" routerLink=\\\"/login\\\" role=\\\"button\\\">Let's get started!</a>\\r\\n  </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  title: string;\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.title = this.route.snapshot.data.title;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container-fluid text-dark\\\">\\r\\n  <div class=\\\"row justify-content-center align-items-center\\\">\\r\\n    <div class=\\\"col col-sm-6 col-md-6 col-lg-4 col-xl-3\\\">\\r\\n      <form method=\\\"POST\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(loginForm)\\\">\\r\\n        <p class=\\\"h2 text-center mb-4\\\">Welcome!</p>\\r\\n        <div class=\\\"md-form\\\">\\r\\n          <i class=\\\"fa fa-user\\\"> </i>\\r\\n          <label for=\\\"username\\\"> Username</label>\\r\\n          <input type=\\\"text\\\" id=\\\"username\\\" name=\\\"userName\\\" class=\\\"form-control\\\" #userName=\\\"ngModel\\\"\\r\\n            [(ngModel)]=\\\"model.userName\\\">\\r\\n        </div>\\r\\n        <br>\\r\\n        <div class=\\\"md-form\\\">\\r\\n          <i class=\\\"fa fa-lock\\\"></i>\\r\\n          <label for=\\\"password\\\"> Password</label>\\r\\n          <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" #password=\\\"ngModel\\\"\\r\\n            [(ngModel)]=\\\"model.password\\\">\\r\\n          Or\\r\\n          <a routerLink=\\\"/signup\\\">Register Here</a>\\r\\n        </div>\\r\\n        <div class=\\\"text-center mt-4\\\">\\r\\n          <input type=\\\"submit\\\" class=\\\"login\\\" value=\\\"Login\\\">\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NgForm } from \"@angular/forms\";\r\n\r\nimport { UserService } from \"src/app/services/user.service\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.css\"]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  role: String;\r\n  serverErrorMessages: string;\r\n\r\n  constructor(private userService: UserService, private router: Router) {}\r\n\r\n  model = {\r\n    userName: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  ngOnInit() {}\r\n\r\n  onSubmit(form: NgForm) {\r\n    this.userService.login(form.value).subscribe(\r\n      res => {\r\n        this.userService.setToken(res[\"token\"]);\r\n        this.userService.getLoggedInStatus.emit(\"Active\");\r\n        this.role = this.userService.getUserPayload().role;\r\n        if (this.role == \"nurse\") {\r\n          this.userService.getLoggedInRole.emit(\"Nurse\");\r\n          this.router.navigateByUrl(\"/nurse\");\r\n        } else if (this.role == \"patient\") {\r\n          this.userService.getLoggedInRole.emit(\"Patient\");\r\n          this.router.navigateByUrl(\"/videos\");\r\n        }\r\n      },\r\n      err => {\r\n        if (err.status === 422) {\r\n          this.serverErrorMessages = err.error.join(\"\\n\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL251cnNlL251cnNlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"mask rgba-black-light d-flex justify-content-center align-items-center\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row wow fadeIn\\\">\\r\\n      <div class=\\\"col-md-9 mb-4 white-text text-center text-md-left\\\">\\r\\n        <h2 class=\\\"display-4 font-weight-bold\\\">Welcome to {{ title }}</h2>\\r\\n        <hr class=\\\"hr-light\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-offsetr-3 col-md-12\\\">\\r\\n            <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n              <tr>\\r\\n                <th class=\\\"text-center\\\">Patient Id</th>\\r\\n                <th class=\\\"text-center\\\">First Name</th>\\r\\n                <th class=\\\"text-center\\\">Last Name</th>\\r\\n                <th class=\\\"text-center\\\">Username</th>\\r\\n                <th class=\\\"text-center\\\"></th>\\r\\n                <th class=\\\"text-center\\\"></th>\\r\\n                <th class=\\\"text-center\\\"></th>\\r\\n              </tr>\\r\\n              <tr *ngFor=\\\"let user of users\\\">\\r\\n                <td class=\\\"text-center\\\">{{ user._id }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ user.firstName }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ user.lastName }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ user.userName }}</td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                  <a routerLink=\\\"/patient-details/{{user._id}}\\\" class=\\\"btn btn-info\\\"><i class=\\\"fas fa-pencil-alt\\\"></i>\\r\\n                    View</a>\\r\\n                </td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                  <a routerLink=\\\"/nurse/tips/{{user._id}}\\\" class=\\\"btn btn-link\\\"><i class=\\\"fas fa-comments\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { User } from '../../models/user';\r\n\r\n@Component({\r\n  selector: 'app-nurse',\r\n  templateUrl: './nurse.component.html',\r\n  styleUrls: ['./nurse.component.css']\r\n})\r\nexport class NurseComponent implements OnInit {\r\n  users: User[];\r\n  title: String;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private userService: UserService,\r\n    private flashMessage: FlashMessagesService,\r\n    ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.title = this.route.snapshot.data.title;\r\n    this.users = new Array<User>();\r\n    this.displayUsers();\r\n  }\r\n\r\n  displayUsers(): void {\r\n    this.userService.getList().subscribe(data => {\r\n      //console.log(data);\r\n      this.users = data;\r\n  });\r\n }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhdGllbnQvcGF0aWVudC1jbGluaWMtdXBkYXRlL3BhdGllbnQtY2xpbmljLXVwZGF0ZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container-fluid text-dark\\\">\\r\\n  <div class=\\\"row justify-content-center align-items-center\\\">\\r\\n    <div class=\\\"col col-sm-6 col-md-6 col-lg-4 col-xl-3\\\">\\r\\n      <!-- Form container -->\\r\\n      <form #clinicForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitPatientClinicUpdate(clinicForm)\\\">\\r\\n        <h2 class=\\\"display-4 font-weight-bold\\\">Patient's Info</h2>\\r\\n        <hr>\\r\\n        <br>\\r\\n        <div class=\\\"md-form\\\">\\r\\n          <i class=\\\"fa fa-user prefix grey-text\\\"></i>\\r\\n          <label for=\\\"materialFormRegisterNameEx\\\">Body Temperature</label>\\r\\n          <input type=\\\"Number\\\" id=\\\"materialFormRegisterNameEx\\\" name=\\\"bodyTemperature\\\" class=\\\"form-control\\\"\\r\\n            #bodyTemperature=\\\"ngModel\\\" [(ngModel)]=\\\"clinic.bodyTemperature\\\">\\r\\n        </div>\\r\\n        <div class=\\\"md-form\\\">\\r\\n          <i class=\\\"fa fa-heart prefix grey-text\\\"></i>\\r\\n          <label for=\\\"materialFormRegisterEmailEx\\\">Heart Rate</label>\\r\\n          <input type=\\\"text\\\" id=\\\"materialFormRegisterEmailEx\\\" name=\\\"heartRate\\\" class=\\\"form-control\\\" #heartRate=\\\"ngModel\\\"\\r\\n            [(ngModel)]=\\\"clinic.heartRate\\\">\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"md-form\\\">\\r\\n          <i class=\\\"fa fa-exclamation-triangle prefix grey-text\\\"></i>\\r\\n          <label for=\\\"materialFormRegisterConfirmEx\\\">Blood Pressure</label>\\r\\n          <input type=\\\"text\\\" id=\\\"materialFormRegisterConfirmEx\\\" name=\\\"bloodPressure\\\" class=\\\"form-control\\\"\\r\\n            #bloodPressure=\\\"ngModel\\\" [(ngModel)]=\\\"clinic.bloodPressure\\\">\\r\\n        </div>\\r\\n        <div class=\\\"md-form\\\">\\r\\n          <i class=\\\"fa fa-lock prefix grey-text\\\"></i>\\r\\n          <label for=\\\"materialFormRegisterPasswordEx\\\">Respiratory Rate</label>\\r\\n          <input type=\\\"text\\\" id=\\\"materialFormRegisterPasswordEx\\\" name=\\\"respiratoryRate\\\" class=\\\"form-control\\\"\\r\\n            #respiratoryRate=\\\"ngModel\\\" [(ngModel)]=\\\"clinic.respiratoryRate\\\">\\r\\n        </div>\\r\\n        <div class=\\\"text-center mt-4\\\">\\r\\n          <input type=\\\"submit\\\" class=\\\"login\\\" value=\\\"Add\\\">\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Clinic } from \"../../../models/clinic\";\r\nimport { ClinicService } from \"src/app/services/clinic.service\";\r\nimport { NgForm } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-patient-clinic-update\",\r\n  templateUrl: \"./patient-clinic-update.component.html\",\r\n  styleUrls: [\"./patient-clinic-update.component.css\"]\r\n})\r\nexport class PatientClinicUpdateComponent implements OnInit {\r\n  private clinic = new Clinic();\r\n  private patientId: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private clinicService: ClinicService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    //Get _id from params in order to get clinic data\r\n    this.route.params.subscribe(params => {\r\n      this.patientId = params._id;\r\n    });\r\n  }\r\n\r\n  onSubmitPatientClinicUpdate(form: NgForm): void {\r\n    this.clinic = form.value;\r\n    this.clinic.patient = this.patientId;\r\n    if (localStorage.getItem(\"clinicId\")) {\r\n      this.clinic._id = localStorage.getItem(\"clinicId\");\r\n      this.clinicService.updateClinic(this.clinic).subscribe(data => {\r\n        localStorage.removeItem(\"clinicId\");\r\n        this.router.navigateByUrl(\"/nurse\");\r\n      });\r\n    } else {\r\n      this.clinicService.addList(this.clinic).subscribe(data => {\r\n        this.router.navigateByUrl(\"/nurse\");\r\n      });\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhdGllbnQvcGF0aWVudC1kZXRhaWxzL3BhdGllbnQtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"mask rgba-black-light d-flex justify-content-center align-items-center\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row wow fadeIn\\\">\\r\\n      <div class=\\\"col-md-9 mb-4 white-text text-center text-md-left\\\">\\r\\n        <h2 class=\\\"display-4 font-weight-bold\\\">Patient's Details</h2>\\r\\n        <hr class=\\\"hr-light\\\">\\r\\n\\r\\n        <a class=\\\"btn btn-primary\\\" routerLink=\\\"/patient-clinic-update/{{patientId}}\\\" role=\\\"button\\\">\\r\\n          <i class=\\\"fas fa-plus-circle\\\"></i>Add record\\r\\n        </a>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-offsetr-3 col-md-12\\\">\\r\\n            <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n              <tr>\\r\\n                <th class=\\\"text-center\\\">Record Id</th>\\r\\n                <th class=\\\"text-center\\\">Record Time</th>\\r\\n                <th class=\\\"text-center\\\">Body Temperature</th>\\r\\n                <th class=\\\"text-center\\\">Heart Rate</th>\\r\\n                <th class=\\\"text-center\\\">Blood Pressure</th>\\r\\n                <th class=\\\"text-center\\\">Respiratory Rate</th>\\r\\n                <th class=\\\"text-center\\\">Assigned To</th>\\r\\n                <th class=\\\"text-center\\\"></th>\\r\\n                <th class=\\\"text-center\\\"></th>\\r\\n              </tr>\\r\\n              <tr *ngFor=\\\"let clinic of clinicDetails\\\">\\r\\n                <td class=\\\"text-center\\\">{{ clinic._id }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ clinic.recorded }}</td>\\r\\n\\r\\n                <div *ngIf=\\\"(clinic.hasOwnProperty('bodyTemperature'));then tempContent else other_content\\\">\\r\\n                </div>\\r\\n                <ng-template #tempContent>\\r\\n                  <td class=\\\"text-center\\\">\\r\\n                    {{ clinic.bodyTemperature }}\\r\\n                  </td>\\r\\n                </ng-template>\\r\\n\\r\\n                <div *ngIf=\\\"((clinic.hasOwnProperty('heartRate')));then heartContent else other_content\\\">\\r\\n                </div>\\r\\n                <ng-template #heartContent>\\r\\n                  <td class=\\\"text-center\\\">\\r\\n                    {{ clinic.heartRate }}\\r\\n                  </td>\\r\\n                </ng-template>\\r\\n\\r\\n                <div *ngIf=\\\"((clinic.hasOwnProperty('bloodPressure')));then bloodContent else other_content\\\">\\r\\n                </div>\\r\\n                <ng-template #bloodContent>\\r\\n                  <td class=\\\"text-center\\\">\\r\\n                    {{ clinic.bloodPressure }}\\r\\n                  </td>\\r\\n                </ng-template>\\r\\n\\r\\n                <div *ngIf=\\\"((clinic.hasOwnProperty('respiratoryRate')));then respContent else other_content\\\">\\r\\n                </div>\\r\\n                <ng-template #respContent>\\r\\n                  <td class=\\\"text-center\\\">\\r\\n                    {{ clinic.respiratoryRate }}\\r\\n                  </td>\\r\\n                </ng-template>\\r\\n                <ng-template #other_content>\\r\\n                  <td class=\\\"text-center\\\">*NR</td>\\r\\n                </ng-template>\\r\\n\\r\\n                <td class=\\\"text-center\\\">{{ clinic.nurse }}</td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                  <a (click)=\\\"onEdit(clinic._id)\\\" class=\\\"btn btn-info\\\"><i class=\\\"fas fa-pencil-alt\\\"></i> Edit</a>\\r\\n                </td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                  <a (click)=\\\"onDelete(clinic._id)\\\" class=\\\"btn btn-danger\\\"><i class=\\\"fas fa-pencil-alt\\\"></i> Delete</a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </table>\\r\\n            <p class=\\\"text-uppercase font-weight-bold\\\">*NR: Not Recorded Test</p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Clinic } from \"../../../models/clinic\";\r\nimport { ClinicService } from \"src/app/services/clinic.service\";\r\nimport { User } from \"../../../models/user\";\r\nimport { NgForm } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-patient-details\",\r\n  templateUrl: \"./patient-details.component.html\",\r\n  styleUrls: [\"./patient-details.component.css\"]\r\n})\r\nexport class PatientDetailsComponent implements OnInit {\r\n  clinicDetails: Array<Clinic>;\r\n  patientId: string;\r\n\r\n  //title: String;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private clinicService: ClinicService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    //Get _id from params in order to get clinic data\r\n    this.route.params.subscribe(params => {\r\n      this.patientId = params._id;\r\n    });\r\n    this.displayClinic();\r\n  }\r\n\r\n  displayClinic(): void {\r\n    this.clinicService.getList(this.patientId).subscribe(data => {\r\n      //console.log(data);\r\n      this.clinicDetails = data;\r\n    });\r\n  }\r\n\r\n  onDelete(_id: string) {\r\n    if (confirm(\"Are you sure to delete this record ?\") == true) {\r\n      this.clinicService.deleteList(_id).subscribe(res => {});\r\n      this.displayClinic();\r\n    }\r\n  }\r\n\r\n  onEdit(clinicId: string) {\r\n    localStorage.setItem(\"clinicId\", clinicId);\r\n    this.router.navigateByUrl(\"/patient-clinic-update/\" + this.patientId);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container-fluid text-dark\\\">\\r\\n  <div class=\\\"row justify-content-center align-items-center\\\">\\r\\n    <div class=\\\"col col-sm-6 col-md-6 col-lg-4 col-xl-3\\\">\\r\\n      <form #signUpForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(signUpForm)\\\">\\r\\n        <p class=\\\"h2 text-center mb-4\\\">{{ title }}</p>\\r\\n        <div class=\\\"md-form\\\">\\r\\n\\r\\n          <label for=\\\"materialFormRegisterNameEx\\\">First Name</label>\\r\\n          <input type=\\\"text\\\" id=\\\"materialFormRegisterNameEx\\\" #firstName=\\\"ngModel\\\" [(ngModel)]=\\\"model.firstName\\\"\\r\\n            class=\\\"form-control\\\" name=\\\"firstName\\\">\\r\\n        </div>\\r\\n        <div class=\\\"md-form\\\">\\r\\n\\r\\n          <label for=\\\"materialFormRegisterEmailEx\\\">Last Name</label>\\r\\n          <input type=\\\"text\\\" id=\\\"materialFormRegisterEmailEx\\\" #lastName=\\\"ngModel\\\" [(ngModel)]=\\\"model.lastName\\\"\\r\\n            class=\\\"form-control\\\" name=\\\"lastName\\\">\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"md-form\\\">\\r\\n\\r\\n          <label for=\\\"materialFormRegisterConfirmEx\\\">Username</label>\\r\\n          <input type=\\\"text\\\" id=\\\"materialFormRegisterConfirmEx\\\" #userName=\\\"ngModel\\\" [(ngModel)]=\\\"model.userName\\\"\\r\\n            class=\\\"form-control\\\" name=\\\"userName\\\">\\r\\n        </div>\\r\\n        <div class=\\\"md-form\\\">\\r\\n\\r\\n          <label for=\\\"materialFormRegisterConfirmEx\\\">Password</label>\\r\\n          <input type=\\\"password\\\" id=\\\"materialFormRegisterConfirmEx\\\" class=\\\"form-control\\\" #password=\\\"ngModel\\\"\\r\\n            [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\">\\r\\n        </div>\\r\\n        <div class=\\\"md-form\\\">\\r\\n\\r\\n          <label for=\\\"materialFormRegisterPasswordEx\\\">Email</label>\\r\\n          <input type=\\\"Email\\\" id=\\\"materialFormRegisterPasswordEx\\\" class=\\\"form-control\\\" #email=\\\"ngModel\\\"\\r\\n            [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\">\\r\\n        </div>\\r\\n        <div class=\\\"md-form\\\">\\r\\n\\r\\n          <label for=\\\"materialFormRegisterPasswordEx\\\">Role</label>\\r\\n          <input type=\\\"text\\\" id=\\\"materialFormRegisterPasswordEx\\\" class=\\\"form-control\\\" #role=\\\"ngModel\\\"\\r\\n            [(ngModel)]=\\\"model.role\\\" name=\\\"role\\\">\\r\\n        </div>\\r\\n        <div class=\\\"text-center mt-4\\\">\\r\\n          <input type=\\\"submit\\\" class=\\\"login\\\" value=\\\"Register\\\">\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { NgForm } from \"@angular/forms\";\r\n\r\nimport { UserService } from \"src/app/services/user.service\";\r\nimport { User } from \"src/app/models/user\";\r\n\r\n@Component({\r\n  selector: \"app-signup\",\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.css\"]\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  title: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  model = new User();\r\n\r\n  ngOnInit() {\r\n    this.title = this.route.snapshot.data.title;\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    this.userService.postUser(form.value).subscribe(\r\n      res => {\r\n        this.router.navigateByUrl(\"/login\");\r\n      },\r\n      err => {}\r\n    );\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RpcHMvcGF0aWVudC10aXBzL3BhdGllbnQtdGlwcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"mask rgba-black-light d-flex justify-content-center align-items-center\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row wow fadeIn\\\">\\r\\n      <div class=\\\"col-md-9 mb-4 white-text text-center text-md-left\\\">\\r\\n        <h2 class=\\\"display-4 font-weight-bold\\\">Your Daily Tips!</h2>\\r\\n        <hr class=\\\"hr-light\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-offsetr-3 col-md-12\\\">\\r\\n            <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n              <tr>\\r\\n                <th class=\\\"text-center\\\">Tips</th>\\r\\n                <th class=\\\"text-center\\\">Message</th>\\r\\n              </tr>\\r\\n              <tr *ngFor=\\\"let tip of tips\\\">\\r\\n                <td class=\\\"text-center\\\">{{ tip.recorded }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ tip.content }}</td>\\r\\n              </tr>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TipsService } from \"src/app/services/tips.service\";\r\nimport { FlashMessagesService } from \"angular2-flash-messages\";\r\nimport { Tips } from \"../../../models/tips\";\r\n\r\n@Component({\r\n  selector: \"app-patient-tips\",\r\n  templateUrl: \"./patient-tips.component.html\",\r\n  styleUrls: [\"./patient-tips.component.css\"]\r\n})\r\nexport class PatientTipsComponent implements OnInit {\r\n  tips: Tips[];\r\n  title: String;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private tipsService: TipsService,\r\n    private flashMessage: FlashMessagesService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.title = this.route.snapshot.data.title;\r\n    this.tips = new Array<Tips>();\r\n    this.displayTips();\r\n  }\r\n\r\n  displayTips(): void {\r\n    this.tipsService.getTips().subscribe(data => {\r\n      //console.log(data);\r\n      this.tips = data;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RpcHMvdGlwcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container-fluid text-dark\\\">\\r\\n  <div class=\\\"row justify-content-center align-items-center\\\">\\r\\n    <div class=\\\"col col-sm-6 col-md-6 col-lg-4 col-xl-3\\\">\\r\\n      <!-- Form container -->\\r\\n      <form #tipsForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(tipsForm)\\\">\\r\\n        <h2 class=\\\"display-4 font-weight-bold\\\">Patient Tips</h2>\\r\\n        <hr>\\r\\n        <br>\\r\\n        <div class=\\\"md-form\\\">\\r\\n          <i class=\\\"fa fa-comment prefix grey-text\\\"></i>\\r\\n          <label for=\\\"materialFormRegisterNameEx\\\">Message</label>\\r\\n          <input type=\\\"String\\\" id=\\\"materialFormRegisterNameEx\\\" name=\\\"content\\\" class=\\\"form-control\\\" #content=\\\"ngModel\\\"\\r\\n            [(ngModel)]=\\\"model.content\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"text-center mt-4\\\">\\r\\n          <input type=\\\"submit\\\" class=\\\"login\\\" value=\\\"Send\\\">\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { NgForm } from \"@angular/forms\";\r\n\r\nimport { TipsService } from \"src/app/services/tips.service\";\r\nimport { Tips } from \"src/app/models/tips\";\r\n\r\n@Component({\r\n  selector: \"app-tips\",\r\n  templateUrl: \"./tips.component.html\",\r\n  styleUrls: [\"./tips.component.css\"]\r\n})\r\nexport class TipsComponent implements OnInit {\r\n  title: string;\r\n  patientId: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private tipsService: TipsService\r\n  ) {}\r\n\r\n  model = new Tips();\r\n\r\n  ngOnInit() {\r\n    this.title = this.route.snapshot.data.title;\r\n    //Get _id from params in order to get clinic data\r\n    this.route.params.subscribe(params => {\r\n      this.patientId = params._id;\r\n    });\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    this.model.patient = this.patientId;\r\n    this.tipsService.addTips(this.model).subscribe(\r\n      res => {\r\n        this.router.navigateByUrl(\"/nurse\");\r\n      },\r\n      err => {}\r\n    );\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ZpZGVvcy92aWRlb3MuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"jumbotron bg-light\\\">\\r\\n    <h1 class=\\\"display-6\\\">Daily Motivational Videos</h1>\\r\\n    <hr class=\\\"my-4\\\">\\r\\n    <div class=\\\"card text-center\\\" *ngFor=\\\"let video of videos\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        {{video.title}}\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <youtube-player videoId=\\\"{{video.id}}\\\" (ready)=\\\"savePlayer($event)\\\" (change)=\\\"onStateChange($event)\\\"\\r\\n          [playerVars]=\\\"playerVars\\\" height=\\\"600\\\" width=\\\"900\\\">\\r\\n        </youtube-player>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\n\r\nimport { videos } from \"src/app/models/videos\";\r\n\r\n@Component({\r\n  selector: \"app-videos\",\r\n  templateUrl: \"./videos.component.html\",\r\n  styleUrls: [\"./videos.component.css\"]\r\n})\r\nexport class VideosComponent {\r\n  playerVars = {\r\n    cc_lang_pref: \"en\"\r\n  };\r\n  private videos;\r\n  private player;\r\n  private ytEvent;\r\n\r\n  constructor() {\r\n    this.videos = videos;\r\n  }\r\n  onStateChange(event) {\r\n    this.ytEvent = event.data;\r\n  }\r\n  savePlayer(player) {\r\n    this.player = player;\r\n  }\r\n\r\n  playVideo() {\r\n    this.player.playVideo();\r\n  }\r\n\r\n  pauseVideo() {\r\n    this.player.pauseVideo();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcnRpYWxzL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"navbar fixed-bottom navbar-light bg-light\\\">\\r\\n  <h6>&copy; Copyright {{ year }}. All Rights Reserved</h6>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  year: number;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    const date = new Date();\r\n    this.year = date.getFullYear();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcnRpYWxzL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\r\\n    aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/\\\"><i class=\\\"fas fa-lg fa-home\\\"></i> Home\\r\\n        </a>\\r\\n      </li>\\r\\n      <ng-container *ngIf=\\\"userRole=='User'\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\"><i class=\\\"fa fa-lg fa-lock\\\"></i> Login</a>\\r\\n        </li>\\r\\n      </ng-container>\\r\\n      <ng-container *ngIf=\\\"userRole=='Nurse'\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/nurse\\\"><i class=\\\"fa fa-lg fa-user-nurse\\\"></i> Nurse Account</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n      </ng-container>\\r\\n      <ng-container *ngIf=\\\"userRole=='Patient'\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/videos\\\"><i class=\\\"fa fa-lg fa-video\\\"></i> Motivational Videos</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/patient-tips\\\"><i class=\\\"fa fa-lg fa-comments\\\"></i> Tips</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/patient-daily\\\"><i class=\\\"fa fa-lg fa-clipboard\\\"></i> Daily Info</a>\\r\\n        </li>\\r\\n      </ng-container>\\r\\n      <ng-container *ngIf=\\\"userStatus=='Inactive'\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/signup\\\"><i class=\\\"fa fa-lg fa-id-badge\\\"></i> Sign Up</a>\\r\\n        </li>\\r\\n      </ng-container>\\r\\n      <ng-container *ngIf=\\\"userStatus=='Active'\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" (click)=\\\"onLogout()\\\"><i class=\\\"fa fa-lg fa-id-badge\\\"></i> Sign Out</a>\\r\\n        </li>\\r\\n      </ng-container>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\n\r\nimport { UserService } from \"src/app/services/user.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-header\",\r\n  templateUrl: \"./header.component.html\",\r\n  styleUrls: [\"./header.component.css\"]\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  userStatus: any;\r\n  userRole: any;\r\n  constructor(private userService: UserService, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.userService.getLoggedInStatus.subscribe(status =>\r\n      this.changeStatus(status)\r\n    );\r\n    this.userService.getLoggedInRole.subscribe(role => this.changeRole(role));\r\n    this.userService.getLoggedInRole.emit(\"User\");\r\n    this.userService.getLoggedInStatus.emit(\"Inactive\");\r\n  }\r\n\r\n  onLogout() {\r\n    this.userService.deleteToken();\r\n    this.userService.getLoggedInStatus.emit(\"Inactive\");\r\n    this.userService.getLoggedInRole.emit(\"User\");\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n\r\n  private changeStatus(userStatus) {\r\n    this.userStatus = userStatus;\r\n  }\r\n\r\n  private changeRole(userRole) {\r\n    this.userRole = userRole;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { User } from \"../models/user\";\r\nimport { Clinic } from \"../models/clinic\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class ClinicService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //method to get list of clinic\r\n  public getListAll(): Observable<any> {\r\n    return this.http.get(environment.apiBaseUrl + \"/nurse/clinic\");\r\n  }\r\n\r\n  //method to get list of clinic\r\n  public getList(_id: string): Observable<any> {\r\n    return this.http.get(\r\n      environment.apiBaseUrl + \"/nurse/clinic/patient/\" + _id\r\n    );\r\n  }\r\n\r\n  //method to get list of clinic\r\n  public deleteList(_id: string): Observable<any> {\r\n    return this.http.delete(environment.apiBaseUrl + \"/nurse/clinic/\" + _id);\r\n  }\r\n\r\n  public addList(clinic: Clinic): Observable<any> {\r\n    return this.http.post<any>(\r\n      environment.apiBaseUrl + \"/nurse/clinic/\",\r\n      clinic\r\n    );\r\n  }\r\n\r\n  public updateClinic(clinic: Clinic): Observable<any> {\r\n    return this.http.post<any>(\r\n      environment.apiBaseUrl + \"/nurse/clinic/\" + clinic._id,\r\n      clinic\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { DailyInfo } from \"../models/daily-info\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class DailyInfoService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public getList(): Observable<any> {\r\n    return this.http.get(environment.apiBaseUrl + \"/patient/daily\");\r\n  }\r\n\r\n  public deleteItem(_id: string): Observable<any> {\r\n    return this.http.delete(environment.apiBaseUrl + \"/patient/daily/\" + _id);\r\n  }\r\n\r\n  public addItem(info: DailyInfo): Observable<any> {\r\n    return this.http.post<any>(\r\n      environment.apiBaseUrl + \"/patient/daily/\",\r\n      info\r\n    );\r\n  }\r\n\r\n  public updateItem(info: DailyInfo): Observable<any> {\r\n    return this.http.post<any>(\r\n      environment.apiBaseUrl + \"/patient/daily/\" + info._id,\r\n      info\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { User } from \"../models/user\";\r\nimport { Tips } from \"../models/tips\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class TipsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public getTips(): Observable<any> {\r\n    return this.http.get(environment.apiBaseUrl + \"/patient/tips\");\r\n  }\r\n\r\n  public addTips(tips: Tips): Observable<any> {\r\n    return this.http.post<any>(environment.apiBaseUrl + \"/nurse/tips/\", tips);\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable, Subject } from \"rxjs\";\r\n\r\nimport { environment } from \"../../environments/environment\";\r\n\r\nimport { User } from \"../models/user\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class UserService {\r\n  public getLoggedInStatus: EventEmitter<any> = new EventEmitter();\r\n  public getLoggedInRole: EventEmitter<any> = new EventEmitter();\r\n  private endpoint = \"http://localhost:3000/api/nurse/patients\";\r\n\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Access-Control-Allow-Headers\":\r\n        \"Origin, X-Requested-With, Content-Type, Accept\"\r\n    })\r\n  };\r\n\r\n  //NoAuth Header\r\n  noAuthHeader = { headers: new HttpHeaders({ NoAuth: \"True\" }) };\r\n\r\n  //Constructor\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //method to get list of patients\r\n  public getList(): Observable<any> {\r\n    return this.http.get<any>(this.endpoint, this.httpOptions);\r\n  }\r\n\r\n  //login\r\n  login(authCredentials) {\r\n    return this.http.post(\r\n      environment.apiBaseUrl + \"/authenticate\",\r\n      authCredentials,\r\n      this.noAuthHeader\r\n    );\r\n  }\r\n\r\n  //Post User\r\n  postUser(user: User) {\r\n    return this.http.post(\r\n      environment.apiBaseUrl + \"/register\",\r\n      user,\r\n      this.noAuthHeader\r\n    );\r\n  }\r\n\r\n  //Token\r\n  setToken(token: string) {\r\n    localStorage.setItem(\"token\", token);\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(\"token\");\r\n  }\r\n\r\n  deleteToken() {\r\n    localStorage.removeItem(\"token\");\r\n  }\r\n\r\n  getUserPayload() {\r\n    var token = this.getToken();\r\n    if (token) {\r\n      var userPayload = atob(token.split(\".\")[1]);\r\n      return JSON.parse(userPayload);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  isLoggedIn() {\r\n    var userPayload = this.getUserPayload();\r\n    if (userPayload) return userPayload.exp > Date.now() / 1000;\r\n    else return false;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiBaseUrl: \"http://localhost:3000/api\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}